/// <reference types="react" />
import { Tile, TileProps } from './Tile';
export { Tile };
export type { TileProps };
declare const _default: import("react").FunctionComponent<Pick<import("react-native").TouchableOpacityProps & import("react-native").TouchableNativeFeedbackProps & {
    title?: string;
    icon?: import("react-native").TouchableHighlightProps & {
        name?: string;
        color?: string;
        size?: number;
        type?: string;
        iconStyle?: import("react-native").StyleProp<import("react-native").TextStyle>;
    } & import("react-native-vector-icons/Icon").IconButtonProps & {
        type?: string;
        Component?: typeof import("react").Component;
        reverse?: boolean;
        raised?: boolean;
        containerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
        iconProps?: import("react-native-vector-icons/Icon").IconProps;
        reverseColor?: string;
        disabled?: boolean;
        disabledStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
        solid?: boolean;
        brand?: boolean;
    };
    caption?: import("react").ReactNode;
    imageSrc?: string | number | import("react-native").ImageURISource | import("react-native").ImageURISource[];
    activeOpacity?: number;
    containerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    imageContainerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    iconContainerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    overlayContainerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    titleStyle?: import("react-native").StyleProp<import("react-native").TextStyle>;
    captionStyle?: import("react-native").StyleProp<import("react-native").TextStyle>;
    width?: number;
    height?: number;
    featured?: boolean;
    contentContainerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    titleNumberOfLines?: number;
    imageProps?: Partial<import("react-native").ImageProps>;
    ImageComponent?: typeof import("react").Component;
} & Partial<import("../config").ThemeProps<TileProps>>, "style" | "onLayout" | "testID" | "width" | "height" | "accessible" | "accessibilityActions" | "accessibilityLabel" | "accessibilityRole" | "accessibilityState" | "accessibilityHint" | "accessibilityValue" | "onAccessibilityAction" | "accessibilityLiveRegion" | "importantForAccessibility" | "accessibilityElementsHidden" | "accessibilityViewIsModal" | "onAccessibilityEscape" | "onAccessibilityTap" | "onMagicTap" | "accessibilityIgnoresInvertColors" | "onPress" | "onLongPress" | "ImageComponent" | "containerStyle" | "hitSlop" | "hasTVPreferredFocus" | "tvParallaxProperties" | "activeOpacity" | "delayLongPress" | "delayPressIn" | "delayPressOut" | "disabled" | "onBlur" | "onFocus" | "onPressIn" | "onPressOut" | "pressRetentionOffset" | "touchSoundDisabled" | "caption" | "title" | "icon" | "titleStyle" | "overlayContainerStyle" | "imageProps" | "background" | "useForeground" | "contentContainerStyle" | "iconContainerStyle" | "imageSrc" | "imageContainerStyle" | "captionStyle" | "featured" | "titleNumberOfLines">> | import("react").ForwardRefExoticComponent<import("react-native").TouchableOpacityProps & import("react-native").TouchableNativeFeedbackProps & {
    title?: string;
    icon?: import("react-native").TouchableHighlightProps & {
        name?: string;
        color?: string;
        size?: number;
        type?: string;
        iconStyle?: import("react-native").StyleProp<import("react-native").TextStyle>;
    } & import("react-native-vector-icons/Icon").IconButtonProps & {
        type?: string;
        Component?: typeof import("react").Component;
        reverse?: boolean;
        raised?: boolean;
        containerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
        iconProps?: import("react-native-vector-icons/Icon").IconProps;
        reverseColor?: string;
        disabled?: boolean;
        disabledStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
        solid?: boolean;
        brand?: boolean;
    };
    caption?: import("react").ReactNode;
    imageSrc?: string | number | import("react-native").ImageURISource | import("react-native").ImageURISource[];
    activeOpacity?: number;
    containerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    imageContainerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    iconContainerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    overlayContainerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    titleStyle?: import("react-native").StyleProp<import("react-native").TextStyle>;
    captionStyle?: import("react-native").StyleProp<import("react-native").TextStyle>;
    width?: number;
    height?: number;
    featured?: boolean;
    contentContainerStyle?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    titleNumberOfLines?: number;
    imageProps?: Partial<import("react-native").ImageProps>;
    ImageComponent?: typeof import("react").Component;
} & Partial<import("../config").ThemeProps<TileProps>>>;
export default _default;
